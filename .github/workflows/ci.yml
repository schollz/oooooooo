name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  linux:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libjack-jackd2-dev liblo-dev libsdl2-dev libsdl2-ttf-dev librtmidi-dev libsndfile1-dev libflac-dev patchelf libfuse-dev cmake

      - name: Build project
        run: make


  macos:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true

      - name: Install dependencies
        run: |
          brew update
          brew install jack liblo sdl2 sdl2_ttf rtmidi libsndfile flac create-dmg fuse cmake

      - name: Set PKG_CONFIG_PATH
        run: echo "PKG_CONFIG_PATH=/opt/homebrew/lib/pkgconfig" >> $GITHUB_ENV
      
      - name: Build project
        run: | 
          export PKG_CONFIG_PATH="/opt/homebrew/lib/pkgconfig:/usr/local/lib/pkgconfig:$PKG_CONFIG_PATH"
          export CXXFLAGS="-I/opt/homebrew/include -I/usr/local/include"
          export LDFLAGS="-L/opt/homebrew/lib -L/usr/local/lib"
          export PATH="/opt/homebrew/bin:$PATH"
          make



  windows:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true


      - name: Setup MSYS2
        uses: msys2/setup-msys2@v2
        with:
          msystem: MINGW64
          update: true
          install: >-
            mingw-w64-x86_64-gcc
            mingw-w64-x86_64-pkg-config
            mingw-w64-x86_64-python
            mingw-w64-x86_64-jack2
            mingw-w64-x86_64-liblo
            mingw-w64-x86_64-SDL2
            mingw-w64-x86_64-SDL2_ttf
            mingw-w64-x86_64-rtmidi
            mingw-w64-x86_64-libsndfile
            mingw-w64-x86_64-flac
            mingw-w64-x86_64-make
            mingw-w64-x86_64-cmake
            zip

      - name: Check MSYS2 environment
        shell: msys2 {0}
        run: |
          which gcc
          which g++
          ls -la /mingw64/bin/g++*
          echo $PATH
          cmake --version

      - name: Build in MSYS2 environment
        shell: msys2 {0}
        run: |
          mkdir -p build
          cd build 
          cmake -DCMAKE_BUILD_TYPE=Release ..
          cmake --build . --config Release

